name: Build all core packages

on:
  workflow_call:
    secrets:
      ccache_s3_endpoint:
      ccache_s3_bucket:
      ccache_s3_access_key:
      ccache_s3_secret_key:

jobs:
  determine_changed_files:
    name: Determine Changed Files
    uses: ./.github/workflows/reusable_determine_changed_files.yml

  determine_changed_packages:
    name: Determine Changed Packages
    needs: determine_changed_files
    uses: ./.github/workflows/reusable_determine_changed_packages.yml
    with:
      all_changed_files: ${{ needs.determine_changed_files.outputs.all_changed_files }}

  build:
    name: Build Packages with external toolchain
    needs: determine_changed_packages
    permissions:
      contents: read
      packages: read
      actions: write
    strategy:
      fail-fast: False
      matrix:
        include:
          - target: malta
            subtarget: be
          - target: x86
            subtarget: 64
    uses: ./.github/workflows/reusable_build.yml
    with:
      container_name: toolchain
      target: ${{ matrix.target }}
      subtarget: ${{ matrix.subtarget }}
      build_kernel: true
      build_all_kmods: true
      build_all_modules: true
      build_full: true
      upload_images: true
      ccache_type: packages
      upload_ccache_cache: ${{ github.repository_owner == 'openwrt' }}
      check_packages_list: ${{ needs.determine_changed_packages.outputs.changed_packages }}

  test:
    name: Test with QEMU
    needs: build
    strategy:
      fail-fast: False
      matrix:
        include:
          - target: malta
            subtarget: be
            image: openwrt-malta-be-vmlinux-initramfs.elf
            use_qemu: true
            qemu_target: mips
          - target: x86
            subtarget: 64
            image: openwrt-x86-64-generic-squashfs-combined.img
            use_qemu: true
            qemu_target: x86
            qemu_bin: x86_64
    uses: ./.github/workflows/reusable_test-image.yml
    with:
      target: ${{ matrix.target }}
      subtarget: ${{ matrix.subtarget }}
      image: ${{ matrix.image }}
      use_qemu: ${{ matrix.use_qemu }}
      qemu_target: ${{ matrix.qemu_target }}
      qemu_bin: ${{ matrix.qemu_bin || '' }}

  upload-ccache-cache-in-s3:
    if: github.event_name == 'push' && github.repository_owner == 'openwrt'
    name: Upload ccache cache to s3
    needs: build
    strategy:
       fail-fast: False
       matrix:
        include:
          - target: malta
            subtarget: be
          - target: x86
            subtarget: 64
    secrets:
      s3_endpoint: ${{ secrets.ccache_s3_endpoint }}
      s3_bucket: ${{ secrets.ccache_s3_bucket }}
      s3_access_key: ${{ secrets.ccache_s3_access_key }}
      s3_secret_key: ${{ secrets.ccache_s3_secret_key }}
    uses: ./.github/workflows/reusable_upload-file-s3.yml
    with:
      download_id: ${{ matrix.target }}-${{ matrix.subtarget }}${{ matrix.testing != '' && '-testing' || '' }}-ccache-cache
      filename: ccache-packages-${{ matrix.target }}-${{ matrix.subtarget }}${{ matrix.testing != '' && '-testing' || '' }}${{ needs.build.outputs.ccache_tag }}.tar

